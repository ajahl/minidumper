# Based off of and modified from https://github.com/google/ml-metadata/blob/284af0c9d0d8467b6e69b632f4aedd0f40daac4c/ml_metadata/libmysqlclient.BUILD

load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

include_files = [
    "include/sentry.h",
    "src/sentry_core.h",
    "src/sentry_core.c",
    "src/sentry_boot.h",
    "src/sentry_logger.h",
    "src/sentry_sync.h",
    "src/sentry_alloc.h",
    "src/sentry_backend.h",
    "src/sentry_scope.h",
    "src/sentry_session.h",
    "src/sentry_path.h",
    "src/sentry_utils.h",
    "src/sentry_value.h",
    "src/sentry_database.h",
    "src/sentry_envelope.h",
    "src/sentry_string.h",
    "src/sentry_options.h",
    "src/sentry_random.h",
    "src/sentry_transport.h",
]

lib_files = [
    "build/lib/libsentry.a",
    "build/lib/libbreakpad_client.a",
]

# A genrule to run cmake and generate configure_out_(srcs,hdrs).
genrule(
    name = "cmake_sentry",
    srcs = glob(
        ["**"],
    ),
    outs = lib_files,
    cmd = "\n".join([
        "export INSTALL_DIR=$$(pwd)/$(@D)/build",
        # Create a temp directory to keep the external/sentry_native directory clean
        "export TMP_DIR=$$(mktemp -d -t build.XXXXXX)",
        "mkdir -p $$TMP_DIR",
        "cp -R $$(pwd)/external/sentry_native/* $$TMP_DIR",
        "cd $$TMP_DIR",
        # See sentry-native/src/CMakeLists.txt @ GitHub for how these values are used
        # This CC=/usr/bin/gcc is important for the Magma VM
        "CC=/usr/bin/gcc cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=OFF -DSENTRY_BUILD_TESTS=0 -DSENTRY_BUILD_EXAMPLES=0",
        "cmake --build build --parallel",
        "cmake --install build --prefix install --config RelWithDebInfo",
        # Copy out generated libraries into the path specified by outs
        "cp -R ./install/* $$INSTALL_DIR",
        "rm -rf $$TMP_DIR",
    ]),
)

cc_library(
    name = "sentry",
    # srcs / hdrs are generated by the :cmake_sentry genrule
    srcs = lib_files,
    hdrs = include_files,
    includes=["include","src"],
    linkopts = ["-lcurl -ldl"],
    linkstatic = 1,
)
